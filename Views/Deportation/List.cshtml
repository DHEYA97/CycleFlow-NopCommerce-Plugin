@using Nop.Plugin.Misc.CycleFlow.Models.Deportation
@model DeportationSearchModel
@{
    ViewBag.PageTitle = T("Admin.Plugin.Misc.CycleFlow.Deportation.Title").Text;
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    NopHtml.SetActiveMenuItemSystemName("Deportation");
}
@{
    const string hideSearchBlockAttributeName = "Deportation.HideSearchBlock";

    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Plugin.Misc.CycleFlow.Deportation.Title")
    </h1> 
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-5">
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="OrderNumber" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="OrderNumber" />
                                        </div>
                                    </div>
                                    <input asp-for="JustShowByCustomer" type="hidden" />
                                    <input asp-for="JustLastStepOrder" type="hidden" />
                                </div>
                            </div>
                            <div class="row">
                                <div class="text-center col-12">
                                    <button type="button" id="search-deportation" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body">
                        @await Html.PartialAsync("Table", new DataTablesModel
                        {
                           Name = "deportation-grid",
                           UrlRead = new DataUrl("List", "Deportation"),
                           SearchButtonId = "search-deportation",
                           Length = Model.PageSize,
                           LengthMenu = Model.AvailablePageSizes,
                           Filters = new List<FilterParameter>
                            {
                            new FilterParameter(nameof(Model.OrderNumber)),
                            new FilterParameter(nameof(Model.JustShowByCustomer)),
                            new FilterParameter(nameof(Model.JustLastStepOrder)),
                            },  
                            ColumnCollection = new List<ColumnProperty>
                                {
                                new ColumnProperty(nameof(DeportationModel.OrderId))
                                {
                                Title = T("Admin.Plugin.Misc.CycleFlow.Deportation.Fields.StoreName").Text,
                                Width = "200"
                                },
                                new ColumnProperty(nameof(DeportationModel.CurrentOrderStatusName))
                                {
                                Title = T("Admin.Plugin.Misc.CycleFlow.Deportation.Fields.CurrentOrderStatusName").Text,
                                Width = "200"
                                },
                                new ColumnProperty(nameof(DeportationModel.NextOrderStatusName))
                                {
                                Title = T("Admin.Plugin.Misc.CycleFlow.Deportation.Fields.NextOrderStatusName").Text,
                                Width = "200"
                                },
                                new ColumnProperty(nameof(DeportationModel.Id))
                                {
                                Title = T("Admin.Plugin.Misc.CycleFlow.Deportation.Fields.View").Text,
                                Width = "150",
                                ClassName =  NopColumnClassDefaults.CenterAll,
                                Render=new RenderCustom("renderDeportationView")
                                },
                                new ColumnProperty(nameof(DeportationModel.Id))
                                {
                                Title = T("Admin.Plugin.Misc.CycleFlow.Deportation.Fields.Chart").Text,
                                Width = "150",
                                ClassName =  NopColumnClassDefaults.CenterAll,
                                Render=new RenderCustom("renderChartView")
                                },
                            }
                        });
                         <script>
                            function renderDeportationView(data, type, row, meta) {
                                const showAllInfo = @Model.JustShowByCustomer.ToString().ToLower();
                                const url = `/Admin/Deportation/View/${row.Id}?showAllInfo=${showAllInfo}`;
                                return `<a href="${url}" class="btn btn-default"><i class="far fa-eye"></i>معاينة</a>`;
                            }
                            function renderChartView(data, type, row, meta) {
                                const url = `/Admin/Deportation/Chart/${row.Id}`;
                                return `<a href="${url}" class="btn btn-info"><i class="far fa-eye"></i>Chart</a>`;
                            }
                         </script>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>