@using Nop.Plugin.Misc.CycleFlow.Models.Deportation;
@using Microsoft.AspNetCore.Routing;
@model DeportationModel
<div class="card-body">
    @if (Model.Id > 0)
    {
        @await Html.PartialAsync("Table", new DataTablesModel
        {
            Name = "deportation-pictures-grid",
            UrlRead = new DataUrl("OrderStatusPictureList", "Deportation", new RouteValueDictionary { [nameof(Model.PosUserId)] = Model.PosUserId, [nameof(Model.OrderId)] = Model.OrderId, [nameof(Model.OrderStatusId)] = Model.OrderStatusId, }),
            UrlDelete = new DataUrl("OrderStatusPictureDelete", "Deportation", null),
            Length = Model.OrderStatusPictureSearchModel.PageSize,
            LengthMenu = Model.OrderStatusPictureSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
                {
                    new ColumnProperty(nameof(OrderStatusPictureModel.PictureUrl))
                    {
                        Title = T("Admin.Catalog.Products.Pictures.Fields.Picture").Text,
                        Render = new RenderCustom("renderPicturesColumnProductPictureUrl")
                    },
                    new ColumnProperty(nameof(OrderStatusPictureModel.Id))
                    {
                        Title = T("Admin.Common.Delete").Text,
                        Width = "100",
                        Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                        ClassName = NopColumnClassDefaults.Button
                    }
                }
        })
        
        <script>
            function renderPicturesColumnProductPictureUrl(data, type, row, meta) {
                return '<a href="' + row.PictureUrl + '" target="_blank"><img alt="' + row.PictureId + '" src="' + row.PictureUrl + '" width="150" /></a>';
            }
        </script>

        <div class="card card-default">
            <div class="card-header">
                @T("Admin.Catalog.Products.Pictures.AddNew")
            </div>
            <div class="card-body">
                <script>
                    $(document).ready(function() {
                        $('#addProductPicture').click(function() {
                            var pictureId = $("#@Html.IdFor(model => model.AddOrderStatusPictureModel.PictureId)").val();
                            var posUserId = $("#@Html.IdFor(model => model.PosUserId)").val();
                            var orderId = $("#@Html.IdFor(model => model.OrderId)").val();
                            var orderStatusId = $("#@Html.IdFor(model => model.OrderStatusId)").val();
                            var storeId = $("#@Html.IdFor(model => model.NopStoreId)").val();
                            var customerId = $("#@Html.IdFor(model => model.CustomerId)").val();
                            

                            if (pictureId == 0) {
                                $("#addProductPictureAlert").click();
                                return;
                            }

                            $('#addProductPicture').attr('disabled', true);

                            var postData = {
                                pictureId: pictureId,
                                posUserId: posUserId,
                                orderId: orderId,
                                orderStatusId: orderStatusId,
                                storeId: storeId,
                                customerId: customerId,
                                
                            };
                            addAntiForgeryToken(postData);

                            $.ajax({
                                cache: false,
                                type: "POST",
                                url: "@(Url.Action("OrderStatusPictureAdd", "Deportation"))",
                                data: postData,
                                success: function (data, textStatus, jqXHR) {
                                    if (!data.Result) {
                                        return;
                                    }
                                    updateTable('#deportation-pictures-grid');
                                    addOrderStatusPictureToForm(data.PictureId, pictureId);

                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    $("#productPictureAddAlert").click();
                                },
                                complete: function (jqXHR, textStatus) {
                                    $('#addProductPicture').attr('disabled', false);
                                }
                            });
                        });

                        var table = $('#deportation-pictures-grid').DataTable();
                        table.on('initComplete', function () {
                            var data = table.rows().data().toArray();
                            fillOrderStatusPicturesForm(data);
                        }); 
                        table.on('draw', function () {
                            var data = table.rows().data().toArray();
                            fillOrderStatusPicturesForm(data);
                        });

                        function addOrderStatusPictureToForm(id, pictureId) {
                            var index = $("#order-status-pictures-container").children().length;
                            var hiddenFields = `
                                    <div id="orderStatusPicture_${id}">
                                        <input type="hidden" name="OrderStatusPictureModels[${index}].Id" value="${id}" />
                                        <input type="hidden" name="OrderStatusPictureModels[${index}].PictureId" value="${pictureId}" />
                                    </div>`;
                            $("#order-status-pictures-container").append(hiddenFields);
                        }

                        function fillOrderStatusPicturesForm(data) {
                            $("#order-status-pictures-container").empty();
                            data.forEach(function (row, index) {
                                var hiddenFields = `
                                        <div id="orderStatusPicture_${row.id}">
                                                <input type="hidden" name="OrderStatusPictureModels[${index}].Id" value="${row.Id}" />
                                                <input type="hidden" name="OrderStatusPictureModels[${index}].PictureId" value="${row.PictureId}" />
                                        </div>`;
                                $("#order-status-pictures-container").append(hiddenFields);
                            });
                        }
                    });
                </script>
                
                <div class="form-group row">
                    <div class="col-md-2">
                        <input asp-for="IsAddPictureRequired" type="hidden" />
                        <nop-label asp-for="AddOrderStatusPictureModel.PictureId" />
                    </div>
                    <div class="col-md-10">
                        <div class="row">
                            <div class="col-md-6">
                                <nop-editor asp-for="AddOrderStatusPictureModel.PictureId" />
                                <span asp-validation-for="AddOrderStatusPictureModel.PictureId"></span>
                            </div>
                            <div class="col-md-6">
                                <button id="captureButton" class="btn btn-primary">@T("Admin.Plugin.Misc.CycleFlow.Deportation.AllDeportationImage.captureButton")</button>
                            </div>
                        </div>
                    </div>
                    <div id="order-status-pictures-container">
                        @for (var i = 0; i < Model.OrderStatusPictureModels?.Count; i++)
                        {
                            <div id="orderStatusPicture_@Model.OrderStatusPictureModels[i].Id">
                                <input type="hidden" name="OrderStatusPictureModels[@i].Id" value="@Model.OrderStatusPictureModels[i].Id" />
                                <input type="hidden" name="OrderStatusPictureModels[@i].PictureId" value="@Model.OrderStatusPictureModels[i].PictureId" />
                                <input type="hidden" name="OrderStatusPictureModels[@i].PictureUrl" value="@Model.OrderStatusPictureModels[i].PictureUrl" /> <!-- ✅ تأكد من أن PictureUrl موجود -->
                            </div>
                        }
                    </div>


                </div>
                <div class="form-group row">
                    <div class="col-md-9 offset-md-3">
                        <button type="button" id="addProductPicture" class="btn btn-primary">@T("Admin.Plugin.Misc.CycleFlow.Deportation.AllDeportationImage.AddPicture")</button>
                    </div>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="card card-default">
            <div class="card-body" id="product-pictures-area">
                @T("Admin.Catalog.Products.Pictures.SaveBeforeEdit")
            </div>
        </div>
    }
</div>
<script>
    $(document).ready(function () {
        $('#captureButton').on('click', function (e) {
            e.preventDefault();
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(function (stream) {
                    var video = document.createElement('video');
                    video.srcObject = stream;
                    video.play();
                    video.onloadedmetadata = function () {
                        var canvas = document.createElement('canvas');
                        canvas.width = video.videoWidth;
                        canvas.height = video.videoHeight;
                        var context = canvas.getContext('2d');
                        context.imageSmoothingEnabled = false;
                        context.drawImage(video, 0, 0, canvas.width, canvas.height);
                        stream.getVideoTracks()[0].stop();

                        var imageData = canvas.toDataURL('image/png');
                        var base64Image = imageData.split(',')[1];
                        
                        var posUserId = $("#@Html.IdFor(model => model.PosUserId)").val();
                        var orderId = $("#@Html.IdFor(model => model.OrderId)").val();
                        var orderStatusId = $("#@Html.IdFor(model => model.OrderStatusId)").val();
                        var storeId = $("#@Html.IdFor(model => model.NopStoreId)").val();
                        var customerId = $("#@Html.IdFor(model => model.CustomerId)").val();

                        var postData = {
                            posUserId: posUserId,
                            orderId: orderId,
                            orderStatusId: orderStatusId,
                            storeId: storeId,
                            customerId: customerId,
                            imageData: base64Image,
                        };
                        addAntiForgeryToken(postData);
                        $.ajax({
                            cache: false,
                            type: "POST",
                            url: "@(Url.Action("OrderStatusPictureAdd", "Deportation"))",
                            data: postData,
                            success: function (data, textStatus, jqXHR) {
                                if (!data.Result) {
                                    return;
                                }
                                updateTable('#deportation-pictures-grid');
                            },
                            error: function (jqXHR, textStatus, errorThrown) {
                                $("#productPictureAddAlert").click();
                            },
                            complete: function (jqXHR, textStatus) {
                                $('#addProductPicture').attr('disabled', false);
                            }
                        });
                    };
                })
                .catch(function (err) {
                    console.log('Error accessing camera: ' + err);
                    alert('Failed to access camera.');
                });
        });
    });
</script>
<nop-alert asp-alert-id="addProductPictureAlert" asp-alert-message="@T("Admin.Catalog.Products.Pictures.Alert.AddNew")" />
<nop-alert asp-alert-id="productPictureAddAlert" asp-alert-message="@T("Admin.Catalog.Products.Pictures.Alert.PictureAdd")" />